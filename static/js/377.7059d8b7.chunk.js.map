{"version":3,"file":"static/js/377.7059d8b7.chunk.js","mappings":"kKACA,G,QAAA,CAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,mBCY3K,EARmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UACtC,UAAC,KAAO,CAACC,GAAK,YAAcH,EAAMI,GAAI,UAAC,IAAGJ,EAAMK,SAG5D,ECJA,EAJgB,SAACL,GACb,OAAO,gBAAKC,UAAWC,EAAAA,QAAU,SAAGF,EAAMM,SAC9C,E,uCCyCMC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,cAAjBD,EAbL,SAACR,GACpB,OACA,kBAAMU,SAAUV,EAAMW,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,KAAMZ,KAAK,iBAAiBa,YAAY,eAE9G,0BACI,4BAAQ,cAIpB,IAIA,EAvCgB,SAAClB,GAEb,IAAImB,EAAQnB,EAAMoB,kBACdC,EAAiBF,EAAMG,OAAOC,KAAI,SAAAC,GAAC,OAAI,SAACC,EAAU,CAACpB,KAAMmB,EAAEnB,KAAiBD,GAAIoB,EAAEpB,IAAZoB,EAAEpB,GAAgB,IACxFsB,EAAkBP,EAAMQ,QAAQJ,KAAI,SAAAK,GAAC,OAAI,SAAC,EAAO,CAACtB,QAASsB,EAAEC,MAAWD,EAAExB,GAAK,IAC9De,EAAMW,eAM3B,OACI,iBAAK7B,UAAWC,EAAAA,QAAU,WACtB,gBAAKD,UAAWC,EAAAA,OAAS,SACnBmB,KAEN,gBAAKpB,UAAWC,EAAAA,SAAW,SACrBwB,KAEN,SAACnB,EAAmB,CAACG,SAZT,SAACqB,GACjB/B,EAAMgC,iBAAiBD,EAAOD,eAClC,MAaJ,E,oBCVA,GAAeG,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACf,GACnB,MAAO,CACHC,kBAAoBD,EAAMC,kBAElC,IAEwB,SAACe,GACrB,MAAO,CACHH,iBAAkB,SAACF,GACfK,GAASH,EAAAA,EAAAA,GAAiBF,GAC9B,EAER,IAIIM,EAAAA,EAFJ,CAGEC,E,yKCrBWvB,EAAW,SAAH,GAAiC,IAA5BwB,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAASvC,GAAK,YAErCwC,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI,iBAAKzC,UAAWC,EAAAA,EAAAA,YAAgB,KAAOsC,EAAWtC,EAAAA,EAAAA,MAAU,IAAI,WAC5D,0BACA,uCAAcoC,GAAWtC,MAExBwC,IAAY,0BAAQD,EAAKG,UAGtC,EAEaC,EAAQ,SAAH,GAAiC,IAA5BL,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAASvC,GAAK,YAEpCwC,EAAWD,EAAKE,SAAWF,EAAKG,MAEpC,OACI,iBAAKzC,UAAWC,EAAAA,EAAAA,YAAgB,KAAOsC,EAAWtC,EAAAA,EAAAA,MAAU,IAAI,WAC5D,0BACI,oCAAWoC,GAAWtC,OAE1B,0BAAOwC,GAAYD,EAAKG,UAGpC,C,kJCzBIE,EAA8B,SAACzB,GAC/B,MAAO,CACH0B,OAAQ1B,EAAM2B,KAAKD,OAE3B,EAEaT,EAAwB,SAACW,GAAe,IAC3CC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAIC,KAAKjD,MAAM6C,QACR,SAACE,GAAS,UAAKE,KAAKjD,SADG,SAAC,KAAQ,CAACG,GAAG,UAE/C,KAAC,EAJkB,CAAS+C,EAAAA,WAQhC,OAFqChB,EAAAA,EAAAA,IAAQU,EAARV,CAAqCc,EAG9E,C,8EClBO,IAAMhC,EAA0B,SAACmC,GACpC,IAAGA,EAEH,MAAO,mBACX,EAEalC,EAAmB,SAACmC,GAAiB,OAAmB,SAACD,GAClE,GAAGA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAGlE,CAAC,C,qBCXD,KAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,gC","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/Dialog.jsx","components/Dialogs/MassegeItem/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsConteiner.jsx","components/common/FormControls/FormControls.js","hoc/authNavigate.js","utils/validators/validators.ts","webpack://react-1/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__nc+6S\",\"dialogsItem\":\"Dialogs_dialogsItem__RlKsR\",\"active\":\"Dialogs_active__nt1wD\",\"dialog\":\"Dialogs_dialog__pAWaF\",\"messages\":\"Dialogs_messages__fz842\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={ '/dialogs/' + props.id }> { props.name }</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Massege = (props) => {\r\n    return <div className={s.massege}>{ props.massege }</div>\r\n}\r\n\r\nexport default Massege;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/Dialog\";\r\nimport Massege from \"./MassegeItem/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormControls/FormControls.js\";\r\nimport { maxLenghtCreator, required } from \"../../utils/validators/validators.ts\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogMessagePage;\r\n    let dialogsElement = state.dialog.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let massegesElement = state.message.map(m => <Massege massege={m.text} key={m.id}/>);\r\n    let newMassegeText = state.newMassegeText;\r\n\r\n    let addNewMassege = (values) => {\r\n        props.addMassegeCreate(values.newMassegeText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog}>\r\n                { dialogsElement }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { massegesElement }\r\n            </div>\r\n            <AddMassegeFormRedux onSubmit={addNewMassege}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMassegeForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} validate={[required, maxLenghtCreator(20)]} name=\"newMassegeText\" placeholder=\"Massege\" />\r\n        </div>\r\n        <div>\r\n            <button>masse</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMassegeFormRedux = reduxForm({form: 'DialogForm'})(AddMassegeForm)\r\n\r\nexport default Dialogs;","import { addMassegeCreate} from \"../../Redux/dialog-reduce.ts\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withNavigateConteiner } from \"../../hoc/authNavigate\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogMessagePage:  state.dialogMessagePage,\r\n    }\r\n}\r\n\r\nlet mapDispathToProps = (dispatch) => {\r\n    return {\r\n        addMassegeCreate: (newMassegeText) => {\r\n            dispatch(addMassegeCreate(newMassegeText));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispathToProps),\r\n    withNavigateConteiner,\r\n)(Dialogs);","import React from \"react\"\r\nimport s from \"./FormControls.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n            <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{ meta.error }</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            <span>{hasError && meta.error}</span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsFromNavigate = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withNavigateConteiner = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthNavigateConteiner = connect(mapStateToPropsFromNavigate)(NavigateComponent)\r\n\r\n    return  ConnectedAuthNavigateConteiner;\r\n}","export type ValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: ValidatorType = (value) => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLength: number) :ValidatorType=> (value: string) => {\r\n    if(value.length > maxLength) return `Max lenght is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__8zY++\",\"error\":\"FormControls_error__WAIPk\",\"formErorr\":\"FormControls_formErorr__-y6pN\"};"],"names":["props","className","s","to","id","name","massege","AddMassegeFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLenghtCreator","placeholder","state","dialogMessagePage","dialogsElement","dialog","map","d","Dialog","massegesElement","message","m","text","newMassegeText","values","addMassegeCreate","compose","connect","dispatch","withNavigateConteiner","Dialogs","input","meta","hasError","touched","error","Input","mapStateToPropsFromNavigate","isAuth","auth","Component","NavigateComponent","this","React","value","maxLength","length"],"sourceRoot":""}